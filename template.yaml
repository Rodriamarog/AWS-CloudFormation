AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: >
  File Deduplication and Hashing

Globals:
  Function:
    Timeout: 8
    MemorySize: 128
    LoggingConfig:
      LogFormat: JSON

Resources:
  LambdaExecutionRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
            Action: 'sts:AssumeRole'
      Policies:
        - PolicyName: LambdaExecutionPolicy
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: Allow
                Action:
                  - 'sns:Publish'
                Resource: !Ref DuplicateNotificationTopic
              - Effect: Allow
                Action:
                  - 's3:GetObject'
                  - 'dynamodb:GetItem'
                  - 'dynamodb:PutItem'
                Resource: '*'

  FileHashCheckFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: FileHashCheck/
      Handler: app.lambda_handler
      Runtime: python3.9
      Role: !GetAtt LambdaExecutionRole.Arn
      Architectures:
        - x86_64
      Environment:
        Variables:
          TABLE_NAME: !Ref HashesTable
          SNS_TOPIC_ARN: !Ref DuplicateNotificationTopic

  HashesTable:
    Type: AWS::Serverless::SimpleTable
    Properties:
      TableName: FileHashes
      PrimaryKey:
        Name: HashKey
        Type: String
      ProvisionedThroughput:
        ReadCapacityUnits: 5
        WriteCapacityUnits: 5

  TestBucket:
    Type: AWS::S3::Bucket
    Properties:
      BucketName: file-deduplication-test-bucket

  FileHashCheckPermission:
    Type: AWS::Lambda::Permission
    Properties:
      FunctionName: !GetAtt FileHashCheckFunction.Arn
      Action: "lambda:InvokeFunction"
      Principal: "s3.amazonaws.com"
      SourceAccount: !Ref AWS::AccountId
      SourceArn: !GetAtt TestBucket.Arn

  DuplicateNotificationTopic:
    Type: AWS::SNS::Topic
    Properties:
      TopicName: DuplicateFileNotifications

  ApplicationResourceGroup:
    Type: AWS::ResourceGroups::Group
    Properties:
      Name: !Sub 'ApplicationInsights-SAM-${AWS::StackName}'
      ResourceQuery:
        Type: CLOUDFORMATION_STACK_1_0

  ApplicationInsightsMonitoring:
    Type: AWS::ApplicationInsights::Application
    Properties:
      ResourceGroupName: !Ref ApplicationResourceGroup
      AutoConfigurationEnabled: 'true'

Outputs:
  FileHashCheckFunctionArn:
    Description: File Hash Check Lambda Function ARN
    Value: !GetAtt FileHashCheckFunction.Arn
  
  FileHashCheckFunctionIamRole:
    Description: Implicit IAM Role ARN created for File Hash Check function
    Value: !GetAtt LambdaExecutionRole.Arn
  
  TestBucketName:
    Description: S3 Bucket for File Deduplication
    Value: !Ref TestBucket
  
  TestBucketArn:
    Description: S3 Bucket ARN for File Deduplication
    Value: !GetAtt TestBucket.Arn

  HashesTableName:
    Description: DynamoDB table for storing file hashes
    Value: !Ref HashesTable
